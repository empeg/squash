In order to install squash onto the empeg, you will need a toolchain
for your computer which can compile programs for the empeg (which is
a strongARM).

I initially was only able to get debian's toolchain to work, but with
some cavaets.  For instance, the glibc was so new, it was hard to
use shared libraries on the empeg.  And the glibc had a bug that cause
some problems with ogg files.

It is unnecessary to use the debian toolchain and instead you may use
the toolchain provide on the hijack kernel's webpage:

http://empeg-hijack.sourceforge.net/armtools-empeg.tar.bz2

Just untar this file and follow the 'hijack toolchain' instructions
when building the libraries.  The rest of the build system is already
defaulted to using this toolchain (i.e. the Makefile).

The rest of this document describes the steps necessary to install
the debian toolchain on your system using debian's tools.  If you
want to use this toolchain, follow the 'debian toolchain'
instructions when building the libraries.  Also you will need to
modify the top of your Makefile by uncommenting the debian toolchain
parts and commenting the hijack toolchain parts.

1) Goto http://people.debian.org/~debacle/cross.html .  This guide
worked for me and I will be following it.  One problem I had with
it was that he did not specify all packages that needed to be installed.
I will try to mention those extra packages here.  I may have left some
out, please let me know.

2) apt-get install toolchain-source debconf debhelper autoconf2.13 fakeroot

3) edit /etc/dpkg/cross-compile, set "crossbase" to "/usr".

4) cd /usr/src && EMAIL='asdf@asdf.com' tpkg-make arm-linux

5) cd binutils-arm-linux-*/ && DEBUILD_DPKG_BUILDPACKAGE_OPTS="-us -uc" debuild && debi

6) cd /usr/src && tpkg-install-libc arm-linux

7) cd gcc-arm-linux-* , then edit debian/rules make these two changes:
    I) Under CONFARGS, change --enable-languages=c, to --enable-languages="c c++"
    II) Under build: and #Add here commands..., add the line:
        cp -a src/libstdc++-v3/config/os/{gnu-linux/bits,newlib/}
    Note: These steps are necessary to build libFLAC support which requires a working
          c++ toolchain.

9) DEBUILD_DPKG_BUILDPACKAGE_OPTS="-us -uc" debuild && debi

8) Rejoice, or if you have error messages bang head on monitor to summon
the computer spirits of long past (perhaps they'll aid you, or maybe
just demand pizza and caffeine).

